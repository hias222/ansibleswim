- name: "displaylive | set vars | global_clean_all {{global_clean_all}}"
  set_fact:
    key_value: serial_data
    clean_install: "{{global_clean_all}}"
    displaylive_base_dir: /opt/displaylive/base
    arm_architecture: true
    displaylive_repo: https://github.com/hias222/displaylive.git

- name: displaylive | Stop service cassandra
  become: true
  service:
    name: cassandra
    state: stopped
  ignore_errors: true

- name: "displaylive | set args for x86_64"
  set_fact:
    key_value: serial_data
    arm_architecture: false
  when: ansible_architecture=='x86_64'

- name: "displaylive | pm2 stop all"
  command: pm2 stop all
  ignore_errors: true

- name: "displaylive | debug"
  debug:
    msg: "on {{ ansible_facts.user_id }} change firewall sudo ufw allow http"

- name: "displaylive | ufw allow http"
  become: true
  shell:
    cmd: ufw allow 8081
  ignore_errors: true

- name: "displaylive | remove dir {{displaylive_base_dir}}"
  become: true
  file:
    path: "{{ displaylive_base_dir}}"
    state: absent
  when: clean_install|bool

- name: "displaylive | create dir {{ displaylive_base_dir}}"
  become: true
  file:
    path: "{{ displaylive_base_dir }}"
    owner: "{{ ansible_facts.user_id }}"
    group: "{{ ansible_facts.user_id }}"
    state: directory
    mode: "0755"

- name: "displaylive | create dir {{ nginx_live_dir}}"
  become: true
  file:
    path: "{{ nginx_live_dir}}"
    owner: "{{ ansible_facts.user_id }}"
    group: "{{ ansible_facts.user_id }}"
    state: directory
    mode: "0755"

- name: "displaylive | git checkout {{displaylive_repo}}"
  git:
    repo: "{{displaylive_repo}}"
    dest: "{{ displaylive_base_dir}}"
    force: yes

#- name: "displaylive | install node-sass - can take long - stop cassandra - load cache for apps"
#  npm:
#    name: node-sass
#    state: present
#    version: 4.14.1
#    path: "{{ displayweb_base_dir}}"
#    global: false
#  when: 
#    - arm_architecture|bool 
#  ignore_errors: true

- name: "displaylive | Install {{ displaylive_base_dir}} packages"
  npm:
    path: "{{ displaylive_base_dir}}"
    global: "{{ npm_gloabal_install }}"
    state: latest

- name: "displaylive | env | copy environment"
  template:
    src: .env
    dest: "{{ displaylive_base_dir}}"

# npm rebuild node-sass ??

- name: "displaylive | build {{ displaylive_base_dir}}"
  shell:
    cmd: npm run build
    chdir: "{{ displaylive_base_dir}}"

- name: "displaylive | cp {{displaylive_base_dir}}/* to  {{nginx_live_dir}}"
  become: true
  shell: cp -rf {{displaylive_base_dir}}/build/* {{nginx_live_dir}}

- name: "displaylive | pm2 start all"
  command: pm2 start all
  ignore_errors: true

- name: "displaylive | pm2 save"
  command: pm2 save
  ignore_errors: true

- name: displaylive | cassandra | start service cassandra
  become: true
  service:
    name: cassandra
    state: started
  ignore_errors: true
