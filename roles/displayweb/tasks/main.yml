- name: "displayweb | set vars | global_clean_all {{global_clean_all}}"
  set_fact:
    key_value: serial_data
    clean_install: "{{global_clean_all}}"
    nginx_config_dir: /etc/nginx/sites-available/
    displayweb_base_dir: /opt/displayweb/base
    arm_architecture: true
    displayweb_repo: https://github.com/hias222/displayweb.git

- name: displayweb | Stop service cassandra
  become: true
  service:
    name: cassandra
    state: stopped
  ignore_errors: true

- name: "displayweb | set args for x86_64"
  set_fact: 
    key_value: serial_data
    arm_architecture: false
  when: ansible_architecture=='x86_64'

- name: "displayweb | pm2 stop all"
  command: pm2 stop all
  ignore_errors: true

- name: "displaywen | debug"
  debug:
    msg: "on {{ ansible_facts.user_id }}tu change firewall sudo ufw allow http"

- name: "displayweb | ufw allow http"
  become: true
  shell: 
    cmd: ufw allow http
  ignore_errors: true

- name: "displayweb | remove dir {{displayweb_base_dir}}"
  become: true
  file:
    path: "{{ displayweb_base_dir}}"
    state: absent
  when: clean_install|bool

- name: "displayweb | create dir {{ displayweb_base_dir}}"
  become: true
  file:
    path: "{{ displayweb_base_dir}}"
    owner: "{{ ansible_facts.user_id }}"
    group: "{{ ansible_facts.user_id }}"
    state: directory
    mode: '0755'

- name: "displayweb | create dir {{ nginx_display_dir}}"
  become: true
  file:
    path: "{{ nginx_display_dir}}"
    owner: "{{ ansible_facts.user_id }}"
    group: "{{ ansible_facts.user_id }}"
    state: directory
    mode: '0755'

- name: "displayweb | git checkout {{displayweb_repo}}"
  git:
    repo: "{{displayweb_repo}}"
    dest: "{{ displayweb_base_dir}}"
    force: yes


#- name: "displayweb | install node-sass - can take long - stop cassandra - load cache for apps"
#  npm:
#    name: node-sass
#    state: present
#    version: 4.14.1
#    path: "{{ displayweb_base_dir}}"
#    global: false
#  when: 
#    - arm_architecture|bool 
#  ignore_errors: true

- name: "displayweb | Install {{ displayweb_base_dir}} packages"
  npm:
    path: "{{ displayweb_base_dir}}"
    global: "{{ npm_gloabal_install }}"
    state: latest

- name: Remove file (delete file)
  ansible.builtin.file:
    path: "{{ displayweb_base_dir}}/.env.development"
    state: absent

- name: Remove file (delete file)
  ansible.builtin.file:
    path: "{{ displayweb_base_dir}}/.env"
    state: absent

- name: Remove file (delete file)
  ansible.builtin.file:
    path: "{{ displayweb_base_dir}}/.env.production"
    state: absent

- name: "displayweb | env | copy environment"
  template:
    src: .env
    dest: "{{ displayweb_base_dir}}/.env"

# npm rebuild node-sass ??

- name: "displayweb | arm prebuild {{ displayweb_base_dir}}"
  shell: 
    cmd:
      npm run build
    chdir: "{{ displayweb_base_dir}}"
  when: 
     - arm_architecture|bool 
  ignore_errors: true

#- name: "displayweb | final build {{ displayweb_base_dir}}"
#  shell: 
#    cmd:
#      npm run build
#    chdir: "{{ displayweb_base_dir}}"

- name: "displayweb | cp {{displayweb_base_dir}}/* to  {{nginx_display_dir}}"
  become: true
  shell: cp -rf {{displayweb_base_dir}}/build/* {{nginx_display_dir}}

- name: "displayweb | pm2 start all"
  command: pm2 start all
  ignore_errors: true